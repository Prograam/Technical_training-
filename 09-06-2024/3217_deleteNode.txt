/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    // ListNode* deleteNode(vector<int>&nums, ListNode*head) {

    // }
    ListNode* modifiedList(vector<int>& arr1, ListNode* head) {
        ListNode* dummy = new ListNode(-1);
        map<int,int>mp;
        for(auto x : arr1) {
            mp[x]++;
        }
        dummy->next = head;
        head = dummy;
        ListNode* curr = head->next;
        ListNode* prev = head;
        while(curr!=NULL) {
            if(mp.find(curr->val)!=mp.end()) {
                prev->next = curr->next;
                curr = curr->next;
                
            }
            else {
                curr = curr->next;
                prev = prev->next;
            }
        }
    return head->next;
        
    }
};